#10진수의 숫자를 q진수로 변환 함수
#스트링 반환
def convert(num, base) :
    if base == 1:
        return num
    temp = "0123456789ABCDEF"
    q, r = divmod(num, base)
    if q == 0 :                 #몫이 0이면 temp[나머지] 반환
        return temp[r]
    else :
        #몫 q를 base로 변환(즉 n진수의 다음 자리를 구함)
        return convert(q, base) + temp[r]

def solution(n, target, participant, myTurn):
    answer = ''
    convert_num = ''
    
    #모든 턴의 답을 전부 문자열로 만들어서 붙이기
    for i in range(participant * target):
        convert_num += str(convert(i, n))
    
    #튜브가 만들어낸 정답의 길이가 미리구할 숫자의 개수보다 작을때까지만 반복
    #튜브의 순서에 말해야하는 답을 answer에 잇기
    while len(answer) < target:
        answer += convert_num[myTurn-1]     #튜브의 순서에 있는 답을 정답모음에 추가
        myTurn += participant               #돌아오는 튜브의 순서 증가
        
    return answer


#n 진접
#미리 구할 숫자의개수 t
#게임에 참가하는 인원 m
#튜브의 순서 p

# n진법으로 변환하는 기능이 필요합니다. ->convert
# 0부터 1씩 증가시키며 n진법으로 변환시킨 값을 answer의 길이가 인원수(m) * 말해야하는 수(t) 보다 커지기 전까지 answer 문자열에 추가합니다.